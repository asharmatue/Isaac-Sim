17 May 2024 21:29

__Changes:__
**Improve Demo**
- Created `reverse_greyscale()` in grid.py to make robots explore away from spawn
- Created `show_robot_obstacle_positions` feature in `find_collision_points()`. Toggled in settings.py. FPS [enabled/disabled]: `[ 12 / 18.5 ]`
-- Created toggle `remove_unnessesary_obs_spheres`. FPS [enabled/disabled]: `[ 4.5 / 11 ] `
- Created modifier `remove_redundant_obstacle_positions` in `find_collision_points()` to remove robot positions that lidar detected. Toggled in settings.py
- Changed `send_robot_actions()`. Added condition to make robots stop and rotate as desired then move forward. This may be solved using a Pure Pursuit as well.
-- 2 new local parameters to tune: `angle_threshold` and `angle_rotation_only_gain_multiplier`

**Troubleshooting Additions**
- Created shapes `rev_shape_array_25` and `rev_shape_array_25_assisted` to test `reverse_greyscale()` 

**Housekeeping**
- Added toggles to control environment.py using settings.py: `show_walls`, `show_door`, `show_grid_vis`, `show_victim_cube`, `show_test_wall`
- Grouped import statements in environment.py by type and use
- Grouped import statements in grid.py by type and use
- Added toggles to control print/log in main.py: `show_log_velocity_commands`, `show_log_get_robot_target_rho`, `show_log_find_collision_points`, `show_interaction_velocity`, `show_log_in_shape_boundary`, `show_log_neighbouring_cells`, `show_log_shape_exploration_velocity`, `show_log_send_robot_actions`
-- Affected: `velocity_commands()`, `get_robot_target_rho()`, `find_collision_points()`, `interaction_velocity()`, `in_shape_boundary()`, `neighbouring_cells()`, `shape_exploration_velocity()`, `send_robot_actions()`
- Moved `r_body` from `occupied_cells()` to settings.py
-- Updated value of `r_body` as robot is center is asymmetrical: [0.16 -> 0.09]. Created `r_body_size` with value 0.16.
-- Note: If any problems with `occupied_cells`, this may be why. Use `r_body_size` to maybe resolve it.

----------------------------------------------------------------------------------------------------

14 May 2024 21:23

__Changes:__
**Improve Demo**
- Made `create_vel_vis()` actually work and show the contributions of each velocity of each 
- Added code in `setup_scene()` & `velocity_commands()` to create and update velocity visualization spheres respectively
- Improved method from yesterday (Method 0) and created 2 additional methods (Methods 1 & 2) for it. Method 2 was made to troubleshoot Method 1.
- Made `show_vel_spheres` in settings.py to toggle creating and calculating velocity visualization spheres
- Made `create_vel_vis_material()` to offload tasks within `velocity_commands()`
- Changed size of `Cube_05` to get better demo results: `x = 0.8 -> 0.4`
- Changed parameter values: (Still to be adjusted, but this is defs better than previous)
-- `r_check`:              1   -> 1.2
-- `entering_weight`:      1   -> 0.9
-- `exploration_weight`:   2.5 -> 4.0
-- `interaction_weight`:   0.4 -> 0.35
**Optimization**
- Forwarding `base_sphere_prim_path` & `base_sphere_prim_path_suffix` from robots.py for velocity visualization spheres in `velocity_commands()`
- Pre-calculating values in `velocity_commands()` for velocity visualization spheres
**Housekeeping**
- Moved robot and lidar parameters to settings.py from robots.py  
- Moved parameters to settings.py from `velocity_commands()` , `shape_entering_velocity()` & `interaction_velocity()`
- Renamed and moved parameters to settings.py: [kf & ka] -> [forward_gain & angle_gain] 
- Grouped and organized settings.py
- Grouped import statements in main.py by type, use, and relevancy
- Improved printouts of `velocity_commands()` and `send_robot_actions()`

----------------------------------------------------------------------------------------------------

13 May 2024 22:50

__Changes:__
**Optimization**
- `interaction_velocity()` now pre-calculates `get_robot_vel()` before performing actual calculation
- `interaction_velocity()` changed to reduce occasional errors on reset
**Removing/moving "Hardcode" values to settings**
- `in_shape_boundary()` changed to no longer use hardcoded `r_sense_cell_x` & `r_sense_cell_y` and to use calculated values
- `c_1` & `alpha` moved to settings.py. Removed from `calculate_v_rho0_i()`
- `r_check` moved to settings.py. Removed from `mu_weight` and `find_collision_points_index()`
-- Note: Could not move hardcoded paper parameters from `shape_entering_velocity()`, `shape_exploration_velocity()`, and `interaction_velocity()`
**Improve Demo**
- Created `create_vel_vis()` in robots.py to visually show each velocity's contributions on each robot. Affected main.py global variables and `velocity_commands()`
- Created new camera: `TopDownCamera` in enviroment.py
- Created new light: `light_2` in enviroment.py
- Created new shape: `shape_array_floorplan` in shapes.py
- Changed settings.py parameter values:
-- `r_sense`:      1   -> 0.7
-- `h`:            2   -> 4
-- `a_e_v_amount`: 1.5 -> 3
-- `input_shape`:  ..._largerect -> _floorplan
- Changed `velocity_commands()` parameter values: (Still to be adjusted!)
-- `entering_weight`:    1   -> 1
-- `exploration_weight`: 2   -> 2.5
-- `interaction_weight`: 0.31 -> 0.4
**Housekeeping**
- Created new function `get_n_cell_l_cell()` in grid.py which returns values `n_cell` and `l_cell`. Removed this calculation from `calculate_rho_0()`
- Renamed `num_iterations` back to `h` to align with paper parameter names. Affected `greyscale()` & `calculate_rho_0()`